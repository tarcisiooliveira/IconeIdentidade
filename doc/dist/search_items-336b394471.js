searchNodes=[{"ref":"IconeIdentidade.html","title":"IconeIdentidade","type":"module","doc":"Documentation for IconeIdentidade."},{"ref":"IconeIdentidade.html#constructor_pixel/1","title":"IconeIdentidade.constructor_pixel/1","type":"function","doc":"Receive an &#39;Imagem&#39; anda based on &#39;:grid&#39; value, generate start and final pixels position ##Exemple iex&gt; IconeIdentidade.constructor_pixel(%IconeIdentidade.Imagem{color: nil,grid: [{46, 1},{176, 2},{46, 3}, {98, 5},{236, 6},{236, 8}, {98, 9},],hex: nil,pixel_map: nil}) %IconeIdentidade.Imagem{ color: nil, grid: [{46, 1}, {176, 2}, {46, 3}, {98, 5}, {236, 6}, {236, 8}, {98, 9}], hex: nil, pixel_map: [ {{50, 0}, {100, 50}}, {{100, 0}, {150, 50}}, {{150, 0}, {200, 50}}, {{0, 50}, {50, 100}}, {{50, 50}, {100, 100}}, {{150, 50}, {200, 100}}, {{200, 50}, {250, 100}} ] }"},{"ref":"IconeIdentidade.html#create_color/1","title":"IconeIdentidade.create_color/1","type":"function","doc":"Create color who will fill generated image Use to this, 3 first numbers generated of :grid list, use :color to record this ##Exemple iex&gt; IconeIdentidade.create_color(%IconeIdentidade.Imagem{color: nil, grid: nil, hex: [161, 46, 176, 98, 236, 169, 209, 230, 198, 159, 207, 139, 96, 55, 135,195], pixel_map: nil}) %IconeIdentidade.Imagem{ color: {161, 46, 176}, grid: nil, hex: [161, 46, 176, 98, 236, 169, 209, 230, 198, 159, 207, 139, 96, 55, 135, 195], pixel_map: nil }"},{"ref":"IconeIdentidade.html#create_table/1","title":"IconeIdentidade.create_table/1","type":"function","doc":"&#39;create_table&#39; receive an &#39;%IconeIdentidade.Imagem&#39; and create a grid, where will be maped the print screen ##Exemple iex&gt; IconeIdentidade.create_table(%IconeIdentidade.Imagem{color: {161, 46, 176}, grid: nil, hex: [161, 46, 176, 98, 236, 169, 209, 230, 198, 159, 207, 139, 96, 55, 135, 195], pixel_map: nil}) %IconeIdentidade.Imagem{ color: {161, 46, 176}, grid: [ {161, 0}, {46, 1}, {176, 2}, {46, 3}, {161, 4}, {98, 5}, {236, 6}, {169, 7}, {236, 8}, {98, 9}, {209, 10}, {230, 11}, {198, 12}, {230, 13}, {209, 14}, {159, 15}, {207, 16}, {139, 17}, {207, 18}, {159, 19}, {96, 20}, {55, 21}, {135, 22}, {55, 23}, {96, 24} ], hex: [161, 46, 176, 98, 236, 169, 209, 230, 198, 159, 207, 139, 96, 55, 135, 195], pixel_map: nil }"},{"ref":"IconeIdentidade.html#draw_pixel/1","title":"IconeIdentidade.draw_pixel/1","type":"function","doc":"Generate image joining all previous information ##Exemple"},{"ref":"IconeIdentidade.html#hash_input/1","title":"IconeIdentidade.hash_input/1","type":"function","doc":"Function receve text and past Struct &#39;IconeIdentidade.Imagem&#39; with text buffered at atom :hex in a list after have been md5 coded ##Exemple iex&gt; IconeIdentidade.hash_input(&quot;Elixir&quot;) %IconeIdentidade.Imagem{ color: nil, grid: nil, hex: [161, 46, 176, 98, 236, 169, 209, 230, 198, 159, 207, 139, 96, 55, 135, 195], pixel_map: nil }"},{"ref":"IconeIdentidade.html#main/1","title":"IconeIdentidade.main/1","type":"function","doc":"Main function, insert any string to generate a pixel_map refering the text Exemple iex&gt; IconeIdentidade.main(&quot;Elixir&quot;) :ok"},{"ref":"IconeIdentidade.html#odd_remove/1","title":"IconeIdentidade.odd_remove/1","type":"function","doc":"Function used to remove grids who has odd value ##Exemple iex&gt; IconeIdentidade.odd_remove(%IconeIdentidade.Imagem{ color: {161, 46, 176}, grid: [ {161, 0}, {46, 1}, {176, 2}, {46, 3}, {161, 4}, {98, 5}, {236, 6}, {169, 7}, {236, 8}, {98, 9}, {209, 10}, {230, 11}, {198, 12}, {230, 13}, {209, 14}, {159, 15}, {207, 16}, {139, 17}, {207, 18}, {159, 19}, {96, 20}, {55, 21}, {135, 22}, {55, 23}, {96, 24} ], hex: [161, 46, 176, 98, 236, 169, 209, 230, 198, 159, 207, 139, 96, 55, 135, 195], pixel_map: nil }) %IconeIdentidade.Imagem{ color: {161, 46, 176}, grid: [ {46, 1}, {176, 2}, {46, 3}, {98, 5}, {236, 6}, {236, 8}, {98, 9}, {230, 11}, {198, 12}, {230, 13}, {96, 20}, {96, 24} ], hex: [161, 46, 176, 98, 236, 169, 209, 230, 198, 159, 207, 139, 96, 55, 135, 195], pixel_map: nil }"},{"ref":"IconeIdentidade.html#save_image/2","title":"IconeIdentidade.save_image/2","type":"function","doc":"Save the file in project directory using the initial input as name."},{"ref":"IconeIdentidade.html#shorter/1","title":"IconeIdentidade.shorter/1","type":"function","doc":"Print the firsts letters in each word in the phrase ##Expemple iex&gt; IconeIdentidade.shorter(&quot;your won phrase with many words&quot;) &quot;YWPWMW&quot;"},{"ref":"IconeIdentidade.html#to_mirror/1","title":"IconeIdentidade.to_mirror/1","type":"function","doc":"To mirror two first position in a list to the lestest position in the same list ##Exemple iex&gt; IconeIdentidade.to_mirror([1,2,3]) [1,2,3,2,1] iex&gt; IconeIdentidade.to_mirror([Pedro, Paulo, Carlos]) [Pedro, Paulo, Carlos, Paulo, Pedro]"},{"ref":"IconeIdentidade.Imagem.html","title":"IconeIdentidade.Imagem","type":"module","doc":"Documentação da estrutura de uma Imagem"},{"ref":"IconeIdentidade.Imagem.html#__struct__/0","title":"IconeIdentidade.Imagem.__struct__/0","type":"function","doc":"Define a estrutura da Imagem :hex - hexadecimal da imagem :cor - a cor da imagem :grid - a grid que gera a imagem :pixel_map - gera onde será preenchido com a imagem"}]